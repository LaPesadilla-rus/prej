[{"d:\\web\\prej\\src\\index.js":"1","d:\\web\\prej\\src\\App.js":"2","d:\\web\\prej\\src\\reportWebVitals.js":"3","d:\\web\\prej\\src\\Buttons\\formCreate.js":"4","d:\\web\\prej\\src\\Buttons\\formReplace.js":"5","d:\\web\\prej\\src\\TableNap.js":"6","d:\\web\\prej\\src\\TableNapTwo.js":"7","d:\\web\\prej\\src\\store\\reducer.js":"8","d:\\web\\prej\\src\\store\\table\\action.js":"9","d:\\web\\prej\\src\\store\\table\\reducer.js":"10","d:\\web\\prej\\src\\store\\sec_table\\reducer.js":"11","d:\\web\\prej\\src\\store\\sec_table\\action.js":"12","d:\\web\\prej\\src\\Componebnt.js":"13","d:\\web\\prej\\src\\filter.js":"14","d:\\web\\prej\\src\\Sost_KMU\\AddNew.js":"15","d:\\web\\prej\\src\\Sost_KMU\\updat.js":"16","d:\\web\\prej\\src\\store\\preload\\reducer.js":"17","d:\\web\\prej\\src\\store\\preload\\action.js":"18","d:\\web\\prej\\src\\animation\\animation.js":"19","d:\\web\\prej\\src\\store\\message\\reducer.js":"20","d:\\web\\prej\\src\\store\\message\\action.js":"21","d:\\web\\prej\\src\\message\\message.js":"22"},{"size":698,"mtime":1611226940731,"results":"23","hashOfConfig":"24"},{"size":3866,"mtime":1611655031565,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":12336,"mtime":1611656215913,"results":"27","hashOfConfig":"24"},{"size":115,"mtime":1608645502086,"results":"28","hashOfConfig":"24"},{"size":1485,"mtime":1611662443247,"results":"29","hashOfConfig":"24"},{"size":2038,"mtime":1611662347856,"results":"30","hashOfConfig":"24"},{"size":396,"mtime":1611310892191,"results":"31","hashOfConfig":"24"},{"size":120,"mtime":1608893663729,"results":"32","hashOfConfig":"24"},{"size":263,"mtime":1608895660087,"results":"33","hashOfConfig":"24"},{"size":259,"mtime":1609163841853,"results":"34","hashOfConfig":"24"},{"size":119,"mtime":1609144750032,"results":"35","hashOfConfig":"24"},{"size":896,"mtime":1611577100106,"results":"36","hashOfConfig":"24"},{"size":2548,"mtime":1611659707159,"results":"37","hashOfConfig":"24"},{"size":2997,"mtime":1611657609704,"results":"38","hashOfConfig":"24"},{"size":3109,"mtime":1611658326375,"results":"39","hashOfConfig":"24"},{"size":329,"mtime":1611225360124,"results":"40","hashOfConfig":"24"},{"size":254,"mtime":1611225150247,"results":"41","hashOfConfig":"24"},{"size":218,"mtime":1611301823684,"results":"42","hashOfConfig":"24"},{"size":409,"mtime":1611311230236,"results":"43","hashOfConfig":"24"},{"size":312,"mtime":1611310592104,"results":"44","hashOfConfig":"24"},{"size":1058,"mtime":1611658790684,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1e8xlag",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},"d:\\web\\prej\\src\\index.js",[],["99","100"],"d:\\web\\prej\\src\\App.js",["101"],"import './App.scss'\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport TableNap from './TableNap.js'\nimport {v4 as ui} from 'uuid'\nimport TableNapTwo from './TableNapTwo'\nimport {setAddSost } from './store/table/action';\nimport {connect} from 'react-redux';\nimport {setAllTable} from './store/sec_table/action'\nimport {setLoaderShow, setLoaderHide} from './store/preload/action'\nimport Animation from './animation/animation'\nimport Component from './Componebnt'\nimport Filter from './filter'\nimport Message from './message/message'\n\n\naxios.defaults.baseURL = 'http://localhost:4000/api/';\n\nfunction App(props) {\n  \n  const [mainTab,setMainTab]=useState([])\n  const [filtr,setFiltr]=useState(false)\n  \n\n  let daet=new Date()\n  let mn=daet.getMonth()+1\n    if (mn<=9){mn='0'+mn}\n\n    useEffect(()=>{\n    \n     Loader();\n    \n    },[])\n\n \n    const Filter_go=()=>{\n      setFiltr(!filtr)\n    }\n\n\n    const Loader=async()=>{\n      let datas= daet.getFullYear()+'-'+mn+'-'+daet.getDate()\n    let data={}\n      if(datas!==''){\n        data.data=datas\n     }\n      props.setLoaderShow();\n      await axios.post('/prejsk/all',{data}).then(res=>{\n        setMainTab(res.data.all)\n        }\n      )\n      props.setLoaderHide()\n    }\n  \n  return (\n    <div>{props.loader_state && <Animation />}{console.log(props)}\n    <div className='App-header ' >\n    { (filtr===true)? < Filter setMainTab={setMainTab} out={Filter_go} />:<button onClick={Filter_go} title='Нажмите для работы с фильтром' className='bt_fl'></button>}\n        <div className='more_table '>\n          <div >\n            {(setAllTable.length>0) &&  <Component  all_table={props.all_table} setAllTable={props.setAllTable} className='marg'/>}\n              <div className='fortablr marg'>\n              \n                <table>\n                  <thead>\n                    <tr>\n                      <th className='th1'>Код</th>\n                      <th className='th2'>Цена</th>\n                      <th className='th3'>Тип</th>\n                      <th className='th4'>Наименование</th>\n                      <th className='th3'></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  <tr className='velo'><td></td><td></td><td></td><td></td></tr>\n                  {(mainTab.length > 0) && mainTab.map(id=> <TableNap key={ui()} row={id}  setAddSost={props.setAddSost} setAllTable={props.setAllTable}/>)}\n                  </tbody>\n               </table>\n              </div>\n            <div>\n          </div>\n        </div>\n        <div >\n            <div>\n              <div className='sim'>\n                <div className='fortablr'>\n                  <table>\n                    <thead>\n                      <tr>\n                        <th className='th1'>Код</th>\n                        <th className='th5'>Количество</th>\n                        <th className='th7'>Наименование</th>\n                        <th className='th6'></th>\n                        <th className='th6'></th>\n                      </tr>\n                    </thead>\n                    <tbody >\n                      <tr className='velo'><td></td><td></td><td></td><td></td></tr>\n                      <TableNapTwo key={ui()} kmu={props.table_sost} />\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n        </div>\n      </div>\n      {props.message_state && <Message /> }\n    </div>\n    </div>\n  );\n}\n\nconst pushStateToProps = (state) => {\n  return{ \n    loader_state:state.loader.loader_state,\n    message_state:state.message.message_state\n  };\n};\n\nconst pushDispatchToProps = {\n  setAddSost,setAllTable,setLoaderHide, setLoaderShow\n};\n\nexport default connect(pushStateToProps,pushDispatchToProps) (App);\n","d:\\web\\prej\\src\\reportWebVitals.js",[],"d:\\web\\prej\\src\\Buttons\\formCreate.js",["102"],"import React, { useEffect, useState } from 'react'\r\nimport './Buttons.scss'\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios'\r\nimport {setMessageShow} from '../store/message/action'\r\nimport Addnew from '../Sost_KMU/AddNew'\r\n\r\nfunction FormCreate(props){\r\n\r\nconst SoClose=()=>{\r\n    props.newRow()\r\n}\r\n\r\nlet initState = {\r\n    priem: '',\r\n    vid: '',\r\n    punkt:'',\r\n    type:''\r\n    }\r\n\r\nlet data = props.all_table\r\nconst [state, setState] = useState(initState)\r\nconst [code_teh,setCode_teh]=useState(data.TEHNOLOGII_TEH)\r\nconst [guid,setGuid]=useState(data.GUID)\r\nconst [cena,setCena]=useState(data.TEHNOLOGII_CENA)\r\nconst [old_cena, setOld_cena]=useState(data.TEHNOLOGII_CENA_OLD)\r\nconst [num,setNum]=useState(data.TEHNOLOGII_N_PRESK)\r\nconst [nds,setNds]=useState(data.TEHNOLOGII_NDS)\r\nconst [adres,setAdres]=useState(data.TEHNOLOGII_ADRES)\r\nconst [koef,setKoef]=useState(data.KOEF)\r\nconst [obozn,setObozn]=useState(data.TEHNOLOGII_KOD)\r\nconst [dialab,setDialab]=useState(data.DIALAB_KOD)\r\nconst [palat,setPalat]=useState(data.REZ_INT3)\r\nconst [cena_dia,setCena_dia]=useState(data.DIALAB_CENA)\r\nconst [cena_dia_med,setCena_dia_med]=useState(data.DIALAB_CENA_MS)\r\nconst [an,setAn]=useState(data.ANALOG_RASPRED)\r\nconst [name,setName]=useState(data.TEHNOLOGII_NAME_DL)\r\nconst [dataB,setDataB]=useState(data.TEHNOLOGII_DATA_BEG.slice(0,10))\r\nconst [dataE,setDataE]=useState(data.TEHNOLOGII_DATA_END.slice(0,10))\r\nconst [kmuadd,setKmuadd]=useState(false)\r\n\r\nlet daet=new Date()\r\n  let mn=daet.getMonth()+1\r\n    if (mn<=9){mn='0'+mn}\r\n\r\nuseEffect(()=>{\r\n  setState(\r\n      { ...state, \r\n            priem: props.all_table.TEHNOLOGII_PRIEM,\r\n            vid:props.all_table.TEHNOLOGII_VID,\r\n            type:props.all_table.TEHNOLOGII_TIP,\r\n            punkt:props.all_table.TEHNOLOGII_PUNKT\r\n    })\r\n},[])\r\n\r\nconst Change_Vid=(e)=>{\r\n    setState({...state,vid:e.target.value})\r\n}\r\n\r\nconst Change_Priem=(e)=>{\r\n    setState({...state,priem:e.target.value})\r\n}\r\nconst Change_Type=(e)=>{\r\n    setState({...state,type:e.target.value})\r\n}\r\nconst Change_Punkt=(e)=>{\r\n    setState({...state,punkt:e.target.value})\r\n}\r\n\r\nconst Kmu=()=>{\r\n    setKmuadd(!kmuadd)\r\n  }\r\n\r\n  const OnReboot=()=>{\r\n    let datas= daet.getFullYear()+'-'+mn+'-'+daet.getDate()\r\n    let data={}\r\n      if(datas!==''){\r\n        data.data=datas\r\n     }\r\n\r\n     axios.post('/prejsk/all',{data}).then(res=>{\r\n       \r\n        }\r\n      )\r\n\r\n  }\r\n\r\nconst Priem=[\r\n    {id:1,type:'В полик.'},\r\n    {id:2, type:'На дому'}\r\n]   \r\n\r\nconst Tip=[\r\n    {id:1,type:'Простая мед.услуга'},\r\n    {id:3, type:'Комплексная мед.услуга'},\r\n    {id:4, type:'Медицинский осмотр'},\r\n    {id:5, type:'Прочая мед.услуга'}\r\n]  \r\n\r\nconst Punkt=[\r\n    {kod:1,tabl:'Таблица № 1'},\r\n    {kod:2,tabl:'Таблица № 2'},\r\n    {kod:3,tabl:'Таблица № 3'},\r\n    {kod:4,tabl:'Таблица № 4'},\r\n    {kod:10,tabl:'Документы'},\r\n    {kod:11,tabl:'Таблица № 1.1'},\r\n    {kod:12,tabl:'Таблица № 1.2'},\r\n    {kod:21,tabl:'Таблица № 2.1'},\r\n]\r\n\r\nconst Vid=[\r\n    {kod:0, vid:'Диагност. и лечение'},\r\n    { kod:1, vid:'Мед. осмотры'},\r\n    { kod:2, vid:'Курсовое лечение'},\r\n    { kod:3, vid:'Прививки'},\r\n]\r\n\r\n\r\nconst Code_Change=(e)=>{\r\n    setCode_teh(e.target.value)\r\n}\r\n\r\nconst Cena_Change=(e)=>{\r\n    setCena(e.target.value)\r\n}\r\n\r\nconst OldCena_Change=(e)=>{\r\n    setOld_cena(e.target.value)\r\n}\r\n\r\nconst Num_Change=(e)=>{\r\n    setNum(e.target.value)\r\n}\r\n\r\nconst Nds_Change=(e)=>{\r\n    setNds(e.target.value)\r\n}\r\n\r\nconst Adres_ch=(e)=>{\r\n    setAdres(e.target.value)\r\n}\r\n\r\nconst Koef_ch=(e)=>{\r\n    setKoef(e.target.value)\r\n}\r\n\r\nconst Obozn_ch=(e)=>{\r\n    setObozn(e.target.value)\r\n}\r\n\r\nconst Dialab_ch=(e)=>{\r\n    setDialab(e.target.value)\r\n}\r\n\r\nconst Palat_ch=(e)=>{\r\n    setPalat(e.target.value)\r\n}\r\n\r\nconst Dial_cena_ch=(e)=>{\r\n    setCena_dia(e.target.value)\r\n}\r\n\r\nconst Dial_cenam_ch=(e)=>{\r\n    setCena_dia_med(e.target.value)\r\n}\r\n\r\nconst An_ch=(e)=>{\r\n    setAn(e.target.value)\r\n}\r\n\r\nconst Name_ch=(e)=>{\r\n    setName(e.target.value)\r\n}\r\n\r\nconst guid_ch=(e)=>{\r\n    setGuid(e.target.value)\r\n}\r\n\r\nconst Closes=()=>{\r\n    props.newRow()\r\n}\r\n\r\nlet vs = (state.type===3)?'vs':'nvs';\r\n\r\nconst Sent =()=>{\r\n    let data={\r\n        TEHNOLOGII_TEH:code_teh,\r\n        TEHNOLOGII_CENA:cena,\r\n        TEHNOLOGII_CENA_OLD:old_cena,\r\n        TEHNOLOGII_PRIEM:state.priem,\r\n        TEHNOLOGII_VID:state.vid,\r\n        TEHNOLOGII_NAME:name,\r\n        TEHNOLOGII_NAME_DL:name,\r\n        TEHNOLOGII_PUNKT:state.punkt,\r\n        TEHNOLOGII_N_PRESK:num,\r\n        TEHNOLOGII_ZENA_3:null,\r\n        TEHNOLOGII_ZENA_4:null,\r\n        TEHNOLOGII_TIP:state.type,\r\n        TEHNOLOGII_NDS:nds,\r\n        TEHNOLOGII_ADRES:adres,\r\n        TEHNOLOGII_DATA_BEG:dataB,\r\n        TEHNOLOGII_DATA_END:dataE,\r\n        REZ_FL1:null,\r\n        REZ_FL2:null,\r\n        REZ_FL3:null,\r\n        REZ_FL4:null,\r\n        REZ_INT1:0, // хз\r\n        REZ_INT2:0, //хз\r\n        REZ_INT3:palat,\r\n        REZ_INT4:0,\r\n        KOEF:koef,\r\n        TEHNOLOGII_KOD:obozn,\r\n        GUID:guid,\r\n        KOD_ROFOMS:obozn,\r\n        DIALAB_KOD:dialab,\r\n        DIALAB_CENA:cena_dia,\r\n        DIALAB_CENA_MS:cena_dia_med,\r\n        ANALOG_RASPRED:an\r\n    }\r\n    axios.post('/prejsk/addTeh',{data}).then(res=>{\r\n       \r\n        props.setMessageShow('Запись добавлена',1)})\r\n    \r\n    Closes()\r\n    OnReboot()\r\n}\r\n\r\n\r\n\r\nconst Upd=()=>{\r\n    let data={\r\n        TEHNOLOGII_TEH:code_teh,\r\n        TEHNOLOGII_CENA:cena,\r\n        TEHNOLOGII_CENA_OLD:old_cena,\r\n        TEHNOLOGII_PRIEM:state.priem,\r\n        TEHNOLOGII_VID:state.vid,\r\n        TEHNOLOGII_NAME:name,\r\n        TEHNOLOGII_NAME_DL:name,\r\n        TEHNOLOGII_PUNKT:state.punkt,\r\n        TEHNOLOGII_N_PRESK:num,\r\n        TEHNOLOGII_ZENA_3:null,\r\n        TEHNOLOGII_ZENA_4:null,\r\n        TEHNOLOGII_TIP:state.type,\r\n        TEHNOLOGII_NDS:nds,\r\n        TEHNOLOGII_ADRES:adres,\r\n        TEHNOLOGII_DATA_BEG:dataB,\r\n        TEHNOLOGII_DATA_END:dataE,\r\n        REZ_FL1:null,\r\n        REZ_FL2:null,\r\n        REZ_FL3:null,\r\n        REZ_FL4:null,\r\n        REZ_INT1:0, // хз\r\n        REZ_INT2:0, //хз\r\n        REZ_INT3:palat,\r\n        REZ_INT4:0,\r\n        KOEF:koef,\r\n        TEHNOLOGII_KOD:obozn,\r\n        GUID:guid,\r\n        KOD_ROFOMS:obozn,\r\n        DIALAB_KOD:dialab,\r\n        DIALAB_CENA:cena_dia,\r\n        DIALAB_CENA_MS:cena_dia_med,\r\n        ANALOG_RASPRED:an\r\n    }\r\n    axios.post('/prejsk/updTeh',{data}).then(res=>{ props.setMessageShow('Изменения внесены',2)})\r\n    Closes();\r\n}\r\n\r\nconst Data_B_ch=(e)=>{\r\n    setDataB(e.target.value)\r\n}\r\n\r\nconst Data_E_ch=(e)=>{\r\n    setDataE(e.target.value)\r\n}\r\n\r\n\r\nreturn(\r\n    <div className='global_pos'>\r\n        <div className='global_pos_two'>\r\n            <div className='tre'>\r\n                <div className='f'>\r\n                    <p>Код</p>\r\n                        <textarea onChange={Code_Change} value={code_teh}></textarea>\r\n                    <p>Цена</p>\r\n                        <textarea onChange={Cena_Change} value={cena}></textarea>\r\n                    <p>Цена старая</p>\r\n                        <textarea onChange={OldCena_Change} value={old_cena}></textarea>\r\n                    <p>Прием</p>\r\n                        <select className='selections' onChange={Change_Priem} value={state.priem}>\r\n                        {Priem.map(id=><option key={id.id} value={id.id}>{id.type}</option>)}\r\n                        </select>\r\n                </div>\r\n                <div className='f'>\r\n                    <p>Вид</p>\r\n                        <select className='selections' onChange={Change_Vid} value={state.vid}>\r\n                        {Vid.map(id=><option key={id.kod} value={id.kod}>{id.vid}</option>)}\r\n                        </select>\r\n                    <p>Пункт</p>\r\n                        <select className='selections' onChange={Change_Punkt} value={state.punkt}>\r\n                        {Punkt.map(id=><option key={id.kod} value={id.kod}>{id.tabl}</option>)}\r\n                        </select>\r\n                    <p>Номер прейск</p>\r\n                        <textarea onChange={Num_Change} value={num}></textarea>\r\n                    <p>Тип</p>\r\n                        <select className='selections' onChange={Change_Type}value={state.type}>\r\n                        {Tip.map(id=> <option key={id.id} value={id.id}>{id.type}</option>)}\r\n                        </select>\r\n                </div>\r\n                <div className='f'>\r\n                    <p>НДС</p>\r\n                        <textarea onChange={Nds_Change} value={nds}></textarea>\r\n                    <p>Адрес</p>\r\n                        <textarea className='name_text' onChange={Adres_ch} value={adres}></textarea>\r\n                    <p>Коэф</p>\r\n                        <textarea onChange={Koef_ch} value={koef}></textarea>\r\n                    <p>Обозн</p>\r\n                        <textarea onChange={Obozn_ch} value={obozn}></textarea></div>\r\n                <div className='f'>\r\n                    <p>Дата начала действия</p>\r\n                        <input className='selections' type='date' value={dataB} onChange={Data_B_ch}/>\r\n                    <p>Дата конца действия</p>\r\n                        <input className='selections' type='date' value={dataE} onChange={Data_E_ch}/>\r\n            </div> \r\n            <fieldset>\r\n            <legend>Принадлежность услуги</legend>\r\n                <input name='hell' type='radio' id='sim'/>\r\n                    <label for=\"sim\">Обычная</label>\r\n                <input name='hell' type='radio' id='chup'/>\r\n                    <label for=\"chup\">Check-up</label>\r\n                <input name='hell' type='radio' id='ref'/>\r\n                    <label for=\"ref\">Рефлексотерапия</label>\r\n                <input name='hell' type='radio' id='at'/>\r\n                    <label for=\"at\">Аттестация</label>\r\n                <input name='hell' type='radio' id='ph'/>    \r\n                    <label for=\"ph\">Психоосвидетельствов.</label>\r\n            </fieldset>\r\n            <div className='f'>\r\n            <p>Код Диалаб</p>\r\n                <textarea onChange={Dialab_ch} value={dialab}></textarea>\r\n            <p>Тип палаты</p>\r\n                <textarea onChange={Palat_ch} value={palat}></textarea>\r\n                <input type='checkbox'id='diap'/>\r\n                    <label for='diap'>По диапазону дат</label>\r\n                <input type='checkbox' id='spo'/>\r\n                    <label for='spo'>Спортивная медицина</label>\r\n            </div>\r\n            <div className='f'>\r\n                <p>Цена Диалаб</p>\r\n                    <textarea onChange={Dial_cena_ch} value={cena_dia}></textarea>\r\n                <p>Цена Диалаб М/С</p>\r\n                    <textarea onChange={Dial_cenam_ch} value={cena_dia_med}></textarea>\r\n            </div>\r\n            <div className='f'>\r\n                <p>Код строки аналога</p>\r\n                    <textarea onChange={An_ch} value={an}></textarea>\r\n            </div>\r\n            <div className='f'>\r\n                <p>Наименование</p>\r\n                    <textarea onChange={Name_ch} value={name} className='name_full'></textarea>\r\n                    <textarea onChange={guid_ch} value={guid}></textarea>\r\n            </div>\r\n            <button className={vs} onClick={Kmu}>Добавить услугу</button>\r\n            <div>\r\n            <button className='ext_but' onClick={Sent}>Добавить</button>\r\n            <button className='ext_but' onClick={Upd}>Изменить</button>\r\n            <button className='ext_but' onClick={SoClose}>Выход</button></div></div>\r\n            </div>\r\n            { kmuadd &&<Addnew add={Kmu}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst pushStateToProps = (state) => {\r\n    return{\r\n        all_table:state.all_table.obj_table\r\n    };\r\n  };\r\n\r\n  const pushDispatchToProps = {\r\n    setMessageShow\r\n  };\r\n\r\nexport default connect(pushStateToProps,pushDispatchToProps) (FormCreate);","d:\\web\\prej\\src\\Buttons\\formReplace.js",["103","104"],"import React from 'react'\r\nimport App from '../App.js'\r\n\r\nfunction FormReplace(){\r\n\r\n}\r\nexport default FormReplace;",["105","106"],"d:\\web\\prej\\src\\TableNap.js",["107"],"import React, { useState } from 'react'\r\nimport './App.scss'\r\nimport axios from 'axios'\r\nimport {setMessageShow} from './store/message/action'\r\nimport {connect} from 'react-redux';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nfunction TableNap(props){\r\n\r\n    const [style,setStyle]=useState(false)\r\n   \r\n    //console.log(props.row)\r\n    let data=props.row\r\n    let cl=(data.TEHNOLOGII_TIP===1)?'typ1 th5':(data.TEHNOLOGII_TIP===4)?'typ2 th5':(data.TEHNOLOGII_TIP===3)?'typ3 th5':'typeel th5'\r\n    let st=(style!==false)?' st1':''\r\n\r\nconst DeleteRow=()=>{\r\n    const data={\r\n        guid:props.row.GUID\r\n    }\r\n    axios.post('/prejsk/deleteTeh',{data}).then(res=>\r\n        {{props.setMessageShow('Запись удалена',0)}});\r\n}\r\n\r\nconst setAdd=()=>{\r\n    props.setAllTable(props.row)\r\n    props.setAddSost(props.row.sost)\r\n    setStyle(!style)\r\n}\r\n\r\n//console.log('tablenap')\r\n    return(\r\n        <tr onClick={setAdd} className={st}>\r\n            <td>{data.TEHNOLOGII_TEH}</td>\r\n            <td >{data.TEHNOLOGII_CENA}</td>\r\n            <td className={cl}>{data.TEHNOLOGII_TIP}</td>\r\n            <td>{data.TEHNOLOGII_NAME_DL}</td>\r\n            <td><DeleteIcon onClick={DeleteRow} className='but' ></DeleteIcon></td>\r\n        </tr>\r\n        \r\n)\r\n}\r\n\r\n\r\nconst pushStateToProps = (state) => {\r\n    return{\r\n     \r\n    };\r\n  };\r\n  const pushDispatchToProps = {\r\n    setMessageShow\r\n  };\r\n  \r\n\r\n\r\nexport default connect(pushStateToProps,pushDispatchToProps) (TableNap);","d:\\web\\prej\\src\\TableNapTwo.js",["108"],"import React, { useState } from 'react'\r\nimport './App.scss'\r\nimport {v4 as ui} from 'uuid'\r\nimport AddNew from './Sost_KMU/AddNew'\r\nimport Update from './Sost_KMU/updat'\r\nimport axios from 'axios'\r\nimport {connect} from 'react-redux';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {setMessageShow} from './store/message/action'\r\nfunction TableNapTwo(props){\r\n\r\n    const [add,setAdd]=useState(false)\r\n    const [upd,setUpd]=useState(false)\r\n    const [act_id,setAct_id]=useState({})\r\n    const [style,setStyle]=useState(false)\r\n\r\n    let data=props.table_sost\r\n    let st=(style!==false)?' st2':''\r\n    const AddLine=(id)=>{\r\n      setAdd(!add)\r\n    }\r\n\r\n    \r\n    const Change_st=()=>{\r\n      setStyle(!style)\r\n    }\r\n\r\n\r\n    const UdpadeLine=(id)=>{\r\n      setUpd(!upd)\r\n      setAct_id(id)\r\n    }\r\n\r\n    const Delete_kmu=(id)=>{\r\n      const data={\r\n        sost_id:id.SOST_ID\r\n      }\r\n      axios.post('/prejsk/deleteSost',{data}).then(res=>\r\n        {{props.setMessageShow('Запись удалена',0)}});\r\n    }\r\nreturn(\r\n        <>{data.map(id=><tr className={st} onChange={Change_st} key={ui()} >\r\n         <td>{id.SOST_KOD_PR}</td>\r\n         <td className='th6'>{id.SOST_KOL}</td>   \r\n         <td >{id.TEHNOLOGII_NAME_DL}</td> \r\n         <td><DeleteIcon onClick={()=>Delete_kmu(id)}>Удалить</DeleteIcon></td>\r\n         <td><AddIcon onClick={()=>AddLine(id)}>Добавить</AddIcon></td>  \r\n         <td><CreateIcon onClick={()=>UdpadeLine(id)}>Редактировать</CreateIcon></td>\r\n        </tr>)}\r\n        {add && <AddNew add={AddLine} datar={data}/>}\r\n        {upd &&<Update upd={UdpadeLine} act_id={act_id}/>}\r\n\r\n        </>\r\n)\r\n}\r\n\r\nconst pushStateToProps = (state) => {\r\n    return{\r\n      table_sost:state.table_sost.obj_sost\r\n    };\r\n  };\r\n  const pushDispatchToProps = {\r\n    setMessageShow\r\n  };\r\n  \r\n\r\n\r\nexport default connect(pushStateToProps,pushDispatchToProps) (TableNapTwo);","d:\\web\\prej\\src\\store\\reducer.js",[],"d:\\web\\prej\\src\\store\\table\\action.js",[],"d:\\web\\prej\\src\\store\\table\\reducer.js",[],"d:\\web\\prej\\src\\store\\sec_table\\reducer.js",[],"d:\\web\\prej\\src\\store\\sec_table\\action.js",[],"d:\\web\\prej\\src\\Componebnt.js",[],"d:\\web\\prej\\src\\filter.js",[],"d:\\web\\prej\\src\\Sost_KMU\\AddNew.js",[],"d:\\web\\prej\\src\\Sost_KMU\\updat.js",["109","110"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport '../Buttons/Buttons.scss'\r\nimport {connect} from 'react-redux';\r\nimport {setMessageShow} from '../store/message/action'\r\n\r\n\r\nfunction Update(props){\r\n    let line=props.act_id   \r\n    let datb=line.SOST_DAT_B\r\n    let date=line.SOST_DAT_E\r\n    const [date_b,setDate_b]=useState(datb.slice(0,10))\r\n    const [date_e,setDate_e]=useState(date.slice(0,10))\r\n    const [name,setName]=useState(line.TEHNOLOGII_NAME_DL)\r\n    const [count,setCount]=useState(line.SOST_KOL)\r\n    const [code,setCode]=useState(line.SOST_KOD_PR)\r\n    const [usl,setUsl]=useState(line.SOST_KOD_KMU)\r\n\r\n    const Ch_code=(e)=>{\r\n        setCode(e.target.value)\r\n    }\r\n\r\n    const Ch_Name=(e)=>{\r\n        setName(e.target.value)\r\n    }\r\n\r\n    const Ch_count=(e)=>{\r\n        setCount(e.target.value)\r\n    }\r\n\r\n    const Ch_dat_e=(e)=>{\r\n        setDate_e(e.target.value)\r\n    }\r\n\r\n    const Ch_dat_b=(e)=>{\r\n        setDate_b(e.target.value)\r\n    }\r\n\r\n    const Closes=()=>{\r\n        props.upd()\r\n        }\r\n        console.log(props.act_id)\r\n    const Sent=()=>{\r\n        const data={\r\n            SOST_KOD_PR:code,\r\n            SOST_DAT_B:date_b,\r\n            SOST_DAT_E:date_e,\r\n            SOST_KOL:count,\r\n            SOST_VIBOR:line.SOST_VIBOR,\r\n            SOST_ID:line.SOST_ID\r\n        }\r\n        axios.post('/prejsk/updateSost',{data}).then(res=>{{props.setMessageShow('Запись отредактирована',2)}});\r\n        Closes();\r\n    }\r\nreturn(\r\n    <div className='global_pos'>{console.log(line)}\r\n<div className='global_pos_two'>\r\n            <div className='tre sd'>\r\n                <div className='f'>\r\n            <p>Комплексная услуга</p>\r\n           <textarea  value={usl}></textarea>\r\n            </div>\r\n        <div className='f'>\r\n            <p>Код</p>\r\n            <textarea onChange={Ch_code} value={code}> </textarea>\r\n        </div>\r\n        <div className='f'>\r\n            <p>Наименование</p>\r\n            <textarea className='naim' onChange={Ch_Name}  value={name}></textarea>\r\n        </div>\r\n        <div className='f'>\r\n            <p>Количество</p>\r\n            <textarea onChange={Ch_count} value={count}></textarea>\r\n        </div>\r\n        <div className='f'><p>Дата начала действия</p>\r\n            <input className='selections' onChange={Ch_dat_b}  type='date' value={date_b}/>\r\n        </div>\r\n        <div className='f'><p>Дата окончания действия</p>\r\n            <input className='selections' onChange={Ch_dat_e} type='date' value={date_e}/>\r\n            </div>\r\n            <div >\r\n                <button className='ext_but' onClick={Sent}>Send</button>\r\n                <button  className='ext_but' onClick={Closes}>Closes</button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n\r\n)\r\n}\r\n\r\n\r\nconst pushStateToProps = (state) => {\r\n    return{\r\n        \r\n    };\r\n  };\r\n\r\n  const pushDispatchToProps = {\r\n    setMessageShow\r\n  };\r\n\r\nexport default connect(pushStateToProps,pushDispatchToProps) (Update);\r\n","d:\\web\\prej\\src\\store\\preload\\reducer.js",[],"d:\\web\\prej\\src\\store\\preload\\action.js",[],"d:\\web\\prej\\src\\animation\\animation.js",[],"d:\\web\\prej\\src\\store\\message\\reducer.js",[],"d:\\web\\prej\\src\\store\\message\\action.js",[],"d:\\web\\prej\\src\\message\\message.js",["111"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport './message.scss'\r\nimport {connect} from 'react-redux'\r\nimport {setMessageHide} from '../store/message/action'\r\n\r\nfunction Message (props){\r\n\r\n    const [act,setAct]=useState(false)\r\n\r\n    const Timer =()=>{\r\n        setTimeout(() => {\r\n            setAct(true)\r\n        }, 200);\r\n        setTimeout(() => {\r\n            props.setMessageHide()\r\n        }, 3000);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        Timer()\r\n    },[])\r\n\r\n    let color=''\r\n    switch (props.messageStore.color){\r\n        case 0 : color = 'delete'; break;\r\n        case 1 : color = 'insert'; break;\r\n        case 2 : color = 'update'; break;\r\n        default: color = 'oops';\r\n    }\r\n\r\n    return(\r\n        <div className={color + ` Window ` + ((act)? ` Move `:null)}>\r\n            <label>{props.messageStore.txt}</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst pushDispatchToProps={\r\n    setMessageHide\r\n}\r\n\r\nexport default connect(\r\n    state=>({\r\n        messageStore: state.message\r\n    }),\r\n    \r\n    pushDispatchToProps)(Message)",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":33,"column":7,"nodeType":"118","endLine":33,"endColumn":9,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"120","line":54,"column":3,"nodeType":"118","endLine":54,"endColumn":5,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":1,"column":8,"nodeType":"124","messageId":"125","endLine":1,"endColumn":13},{"ruleId":"122","severity":1,"message":"126","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":11},{"ruleId":"112","replacedBy":"127"},{"ruleId":"114","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":22,"column":10,"nodeType":"131","messageId":"132","endLine":22,"endColumn":52},{"ruleId":"129","severity":1,"message":"130","line":41,"column":10,"nodeType":"131","messageId":"132","endLine":41,"endColumn":52},{"ruleId":"122","severity":1,"message":"133","line":17,"column":16,"nodeType":"124","messageId":"125","endLine":17,"endColumn":22},{"ruleId":"129","severity":1,"message":"130","line":52,"column":60,"nodeType":"131","messageId":"132","endLine":52,"endColumn":110},{"ruleId":"116","severity":1,"message":"134","line":22,"column":7,"nodeType":"118","endLine":22,"endColumn":9,"suggestions":"135"},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Loader'. Either include it or remove the dependency array.","ArrayExpression",["138"],"React Hook useEffect has missing dependencies: 'props.all_table.TEHNOLOGII_PRIEM', 'props.all_table.TEHNOLOGII_PUNKT', 'props.all_table.TEHNOLOGII_TIP', 'props.all_table.TEHNOLOGII_VID', and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["139"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'App' is defined but never used.",["136"],["137"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'setUsl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Timer'. Either include it or remove the dependency array.",["140"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [Loader]",{"range":"147","text":"148"},"Update the dependencies array to be: [props.all_table.TEHNOLOGII_PRIEM, props.all_table.TEHNOLOGII_PUNKT, props.all_table.TEHNOLOGII_TIP, props.all_table.TEHNOLOGII_VID, state]",{"range":"149","text":"150"},"Update the dependencies array to be: [Timer]",{"range":"151","text":"152"},[855,857],"[Loader]",[1814,1816],"[props.all_table.TEHNOLOGII_PRIEM, props.all_table.TEHNOLOGII_PUNKT, props.all_table.TEHNOLOGII_TIP, props.all_table.TEHNOLOGII_VID, state]",[477,479],"[Timer]"]